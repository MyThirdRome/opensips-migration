#!/bin/bash

###############################################################################
# OpenSIPs Automated Installation Script
# Generated by OpenSIPs Migration Tool
# Source Server: OpenSIPs 3.0.3 on CentOS Linux 7
# Target: Fresh VPS installation (Ubuntu/Debian)
###############################################################################

set -e

echo "=================================================="
echo "OpenSIPs Migration - Automated Installation"
echo "=================================================="

# Color output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Check if running as root
if [ "$EUID" -ne 0 ]; then 
    echo -e "${RED}Please run as root${NC}"
    exit 1
fi

# Get script directory
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd "$SCRIPT_DIR"

echo -e "${GREEN}Step 0: Reassembling Database Dump${NC}"
if [ -f "database_dump.sql.partaa" ]; then
    if [ ! -f "database_dump.sql" ]; then
        echo "Database was split for GitHub. Reassembling..."
        cat database_dump.sql.part* > database_dump.sql
        echo -e "${GREEN}✓ Database reassembled successfully${NC}"
        echo "Database size: $(du -h database_dump.sql | cut -f1)"
    else
        echo -e "${GREEN}✓ Database already reassembled${NC}"
    fi
else
    echo -e "${YELLOW}Warning: Split database parts not found${NC}"
fi

echo -e "${GREEN}Step 1: System Update${NC}"
apt-get update
apt-get upgrade -y

echo -e "${GREEN}Step 2: Installing Dependencies${NC}"
apt-get install -y \
    wget \
    curl \
    git \
    build-essential \
    libncurses5-dev \
    libssl-dev \
    libxml2-dev \
    libpcre3-dev \
    libmicrohttpd-dev \
    m4 \
    bison \
    flex

echo -e "${GREEN}Step 3: Installing MySQL/MariaDB${NC}"
apt-get install -y mariadb-server mariadb-client
systemctl enable mariadb
systemctl start mariadb

echo -e "${YELLOW}Setting up MySQL root password...${NC}"
echo "Please enter MySQL root password when prompted"
mysql_secure_installation

echo -e "${GREEN}Step 4: Creating OpenSIPs Database${NC}"
echo "Please enter the MySQL root password you just set:"
read -s MYSQL_ROOT_PASSWORD
echo ""

mysql -u root -p"$MYSQL_ROOT_PASSWORD" <<EOF
CREATE DATABASE IF NOT EXISTS opensips;
GRANT ALL PRIVILEGES ON opensips.* TO 'opensips'@'localhost' IDENTIFIED BY 'opensipsrw';
FLUSH PRIVILEGES;
EOF

echo -e "${GREEN}Importing database dump...${NC}"
if [ -f "$SCRIPT_DIR/database_dump.sql" ]; then
    echo "This may take several minutes for large databases..."
    mysql -u root -p"$MYSQL_ROOT_PASSWORD" opensips < "$SCRIPT_DIR/database_dump.sql"
    echo -e "${GREEN}✓ Database imported successfully${NC}"
else
    echo -e "${RED}ERROR: database_dump.sql not found in $SCRIPT_DIR${NC}"
    echo "Please reassemble the database first using REASSEMBLE_DB.sh"
    exit 1
fi

echo -e "${GREEN}Step 5: Installing OpenSIPs 3.0.3${NC}"

# Download OpenSIPs source (matching source server version)
cd /usr/src
OPENSIPS_VERSION="3.0.3"
echo "Downloading OpenSIPs version $OPENSIPS_VERSION (matching source server)..."
wget https://opensips.org/pub/opensips/3.0.3/opensips-3.0.3.tar.gz
tar -xzf opensips-3.0.3.tar.gz
cd opensips-3.0.3

# Compile and install
echo "Compiling OpenSIPs (this may take several minutes)..."
make all
make install

echo -e "${GREEN}Step 6: Restoring Configuration Files${NC}"

# Extract configuration archive if it exists
if [ -f "$SCRIPT_DIR/opensips_files.tar.gz" ]; then
    cd /
    tar -xzf "$SCRIPT_DIR/opensips_files.tar.gz"
    echo -e "${GREEN}✓ Configuration files restored${NC}"
else
    echo -e "${YELLOW}Warning: opensips_files.tar.gz not found in $SCRIPT_DIR${NC}"
fi

# Ensure config directory exists
mkdir -p /etc/opensips
chmod 755 /etc/opensips

echo -e "${GREEN}Step 7: Setting up OpenSIPs Service${NC}"

# Create systemd service if not exists
if [ ! -f /lib/systemd/system/opensips.service ]; then
    cat > /lib/systemd/system/opensips.service <<'SERVICE'
[Unit]
Description=OpenSIPS SIP Server
After=network.target

[Service]
Type=forking
PIDFile=/var/run/opensips.pid
ExecStart=/usr/local/sbin/opensips -P /var/run/opensips.pid
ExecReload=/bin/kill -HUP \$MAINPID
Restart=on-failure

[Install]
WantedBy=multi-user.target
SERVICE
fi

systemctl daemon-reload
systemctl enable opensips

echo -e "${GREEN}Step 8: Starting OpenSIPs${NC}"
systemctl start opensips
sleep 2

# Check if OpenSIPs is running
if systemctl is-active --quiet opensips; then
    echo -e "${GREEN}✓ OpenSIPs is running successfully!${NC}"
else
    echo -e "${RED}✗ OpenSIPs failed to start. Check logs: journalctl -u opensips -xe${NC}"
    echo "Common issues:"
    echo "  - Check /etc/opensips/opensips.cfg for errors"
    echo "  - Verify database connection settings"
    echo "  - Check if port 5060 is available"
    exit 1
fi

echo ""
echo "=================================================="
echo -e "${GREEN}Installation Complete!${NC}"
echo "=================================================="
echo ""
echo "OpenSIPs Status:"
systemctl status opensips --no-pager
echo ""
echo "Useful commands:"
echo "  View logs: journalctl -u opensips -f"
echo "  Restart: systemctl restart opensips"
echo "  Check config: opensips -c"
echo ""
echo -e "${YELLOW}IMPORTANT Post-Installation Steps:${NC}"
echo "1. Update IP addresses in /etc/opensips/opensips.cfg if needed"
echo "2. Verify database credentials in config files"
echo "3. Configure firewall for SIP (port 5060/UDP)"
echo "4. Review TLS certificates if using encrypted transport"
echo ""
